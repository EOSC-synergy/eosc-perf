# Docker image for running CI/CD tests of the backend using JePL
#ARG CICD_IMAGE=eoscperf/cicd-images:backend-1.0.1
#FROM ${CICD_IMAGE}
#
#COPY backend backend
#COPY autoapp.py ./
#COPY requirements requirements
#COPY factories factories
#COPY tests tests
## package installation is described in tox.ini
#COPY tox.ini tox.ini
#
#ENV FLASK_ENV="production"
#
## to be on the save side, install dependencies
##RUN pip install --no-cache -r requirements/prod.txt
##RUN pip install --no-cache -r requirements/dev.txt

# ================================== BUILDER ===================================
ARG INSTALL_PYTHON_VERSION=3.8
ARG PYTHON_IMAGE_TAG=slim-buster
FROM python:${INSTALL_PYTHON_VERSION}-${PYTHON_IMAGE_TAG} AS backend

RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache tox flake8 bandit

WORKDIR /app

ENV PATH="/home/sid/.local/bin:${PATH}"
ENV FLASK_APP="autoapp.py"

COPY backend backend
COPY autoapp.py ./
COPY requirements requirements

# ============================ Production for CI/CD ============================
FROM backend AS production

ARG USER_ID=1000
ARG USER_GROUP=1000

RUN pip install --no-cache -r requirements/prod.txt

# User ID and GROUP have to match Jenkins CI/CD User!
RUN groupadd -g ${USER_GROUP} sid
RUN useradd -u ${USER_ID} -g ${USER_GROUP} -m sid
RUN chown -R sid:sid /app
USER sid

ENV FLASK_ENV="production"
EXPOSE 5000
CMD ["tail","-f","/dev/null"]
